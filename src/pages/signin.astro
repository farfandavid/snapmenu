---
import { app } from "../firebase/server";
import { getAuth } from "firebase-admin/auth";
import Layout from "../layouts/Layout.astro";

/* Verificar si el usuario está autenticado */
const auth = getAuth(app);
if (Astro.cookies.has("session")) {
    const sessionCookie = Astro.cookies.get("session")?.value;
    const decodedCookie = await auth
        .verifySessionCookie(sessionCookie || "")
        .then((decodedClaims) => {
            return decodedClaims;
        })
        .catch((error) => {
            return null;
        });
    if (decodedCookie) {
        return Astro.redirect("/dashboard");
    }
}
---

<Layout title="Login">
    <section class="relative flex flex-wrap lg:h-screen lg:items-center">
        <span>
            <a
                href="/"
                class="absolute top-1 left-1 text-gray-500 flex justify-center items-center hover:underline font-bold gap-1 text-xl"
            >
                <i class="bi bi-arrow-left-square-fill text-orange-500"
                ></i>Inicio
            </a>
        </span>
        <div
            class="flex flex-col w-full px-4 py-12 sm:px-6 sm:py-16 lg:px-8 lg:py-24 h-screen justify-center items-center"
        >
            <div class="mx-auto max-w-lg text-center">
                <h1 class="text-2xl font-bold sm:text-3xl">
                    Empecemos a crear SnapMenus con QR!
                </h1>

                <p class="mt-4 text-gray-500">Inicia Sesión</p>
            </div>
            <form
                action="/api/auth/signin"
                method="post"
                class="w-full 2xl:w-1/4 mb-0 mt-8 space-y-4"
            >
                <div class="w-full">
                    <label for="email" class="sr-only">Email</label>
                    <div class="relative">
                        <input
                            type="email"
                            name="email"
                            id="email"
                            placeholder="Email: ejemplo@ejemplo"
                            autocomplete="email"
                            class="w-full rounded-lg border-gray-200 p-4 pe-12 text-sm shadow-sm"
                        />
                        <span
                            class="absolute inset-y-0 end-0 grid place-content-center px-4 text-gray-500"
                        >
                            <i class="bi bi-at"></i>
                        </span>
                    </div>
                </div>
                <div class="w-full">
                    <label for="password" class="sr-only">Contraseña</label>
                    <div class="relative">
                        <input
                            type="password"
                            name="password"
                            id="password"
                            placeholder="Contraseña: cOntr4s3n4"
                            autocomplete="current-password"
                            class="w-full rounded-lg border-gray-200 p-4 pe-12 text-sm shadow-sm"
                        />
                        <span
                            class="absolute inset-y-0 end-0 grid place-content-center px-4 text-gray-500"
                        >
                            <i class="bi bi-key-fill"></i>
                        </span>
                    </div>
                </div>
                <div class="flex items-center justify-between">
                    <p class="text-sm text-gray-500">
                        No tienes una Cuenta?
                        <a class="underline" href="register">Registrarse</a>
                    </p>
                    <button
                        id="btn-submit"
                        class="flex rounded-lg bg-orange-500 px-5 py-3 text-sm font-medium text-white"
                        >Iniciar Sesión</button
                    >
                </div>
            </form>
            <div class="relative flex py-5 items-center w-1/4">
                <div class="flex-grow border-t border-gray-400"></div>
                <span class="flex-shrink mx-4 text-gray-400">O</span>
                <div class="flex-grow border-t border-gray-400"></div>
            </div>
            <button
                id="google"
                class="px-4 py-2 border flex gap-2 border-slate-200 dark:border-slate-700 rounded-lg hover:border-slate-400 dark:hover:border-slate-500 hover:shadow transition duration-150"
            >
                <img
                    class="w-6 h-6"
                    src="https://www.svgrepo.com/show/475656/google-color.svg"
                    loading="lazy"
                    alt="google logo"
                />
                <span>Iniciar sesión con Google</span>
            </button>
        </div>
    </section>
</Layout>
<script>
    import {
        getAuth,
        inMemoryPersistence,
        signInWithEmailAndPassword,
        GoogleAuthProvider,
        signInWithPopup,
    } from "firebase/auth";
    import { app } from "../firebase/client";
    const auth = getAuth(app);
    auth.setPersistence(inMemoryPersistence);
    const form = document.querySelector("form") as HTMLFormElement;
    form.addEventListener("submit", async (e) => {
        e.preventDefault();
        const formData = new FormData(form);
        const email = formData.get("email")?.toString();
        const password = formData.get("password")?.toString();

        if (!email || !password) {
            return;
        }

        const userCredential = await signInWithEmailAndPassword(
            auth,
            email,
            password,
        );
        const idToken = await userCredential.user.getIdToken();
        const response = await fetch("/api/auth/signin", {
            headers: {
                Authorization: `Bearer ${idToken}`,
            },
        });

        if (response.redirected) {
            window.location.assign(response.url);
        }
    });

    const googleSignin = document.querySelector("#google") as HTMLButtonElement;
    googleSignin.addEventListener("click", async () => {
        const provider = new GoogleAuthProvider();
        const userCredential = await signInWithPopup(auth, provider);
        const idToken = await userCredential.user.getIdToken();
        const res = await fetch("/api/auth/signin", {
            headers: {
                Authorization: `Bearer ${idToken}`,
            },
        });

        if (res.redirected) {
            window.location.assign(res.url);
        } else {
            alert("Error al iniciar sesión con Google");
        }
    });
</script>
